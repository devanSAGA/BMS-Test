{"version":3,"sources":["components/HomePage/HomePage.js","components/HomePage/index.js","components/CheckDuplicates/index.js","components/CheckDuplicates/CheckDuplicates.js","components/EventCard/index.js","components/EventCard/EventCard.js","components/EventTrailerRow/index.js","components/EventTrailerRow/EventTrailerRow.js","components/TrailersContainer/index.js","components/TrailersContainer/TrailersContainer.js","routers/AppRouter.js","App.js","index.js"],"names":["tasklist","title","url","HomePage","className","map","task","index","key","to","CheckDuplicates","state","input","duplicateEnteries","enteries","error","changeInput","event","value","target","setState","addEntry","inputValues","trim","split","isInvalidInputFound","newEntries","trimmedInput","validateInput","includes","lowerLimit","upperLimit","parseInt","start","push","processEntry","entry","sort","a","b","isInputValid","rangeInputs","length","isNaN","this","type","placeholder","onChange","onKeyPress","keyCode","which","onClick","join","Component","EventCard","props","isSelected","date","size","src","posterURL","alt","EventTrailerRow","width","height","trailerURL","frameBorder","allow","allowFullScreen","hideTrailer","eventLanguage","dimension","TrailersContainer","eventsData","isLoading","isTrailerRowShowing","eventsList","getNumberOfColumns","screenWidth","window","innerWidth","Math","floor","renderEventsList","indexOfClickedEvent","insertTrailerBeforeIndex","idOfClickedEvent","numberOfColumns","rowNumberOfClickedEvent","ceil","Object","keys","forEach","movieId","EventTitle","ShowDate","TrailerURL","EventLanguage","EventDimension","videoId","showTrailer","fetch","method","headers","then","response","text","data","JSON","parse","catch","AppRouter","basename","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64a7544e.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./HomePage.css\";\n\nconst tasklist = [\n  {\n    title: \"Task 1 - Check Duplicates\",\n    url: \"assignment1\"\n  },\n  {\n    title: \"Task 2 - Recreate Trailers Page\",\n    url: \"assignment2\"\n  }\n];\n\nconst Homepage = () => {\n  return (\n    <div className=\"centerd-container\">\n      <h1 className=\"heading\">BookMyShow Assignment</h1>\n      <section className=\"tasklist\">\n        {tasklist.map((task, index) => {\n          return (\n            <NavLink\n              key={`task-${index}`}\n              to={task.url}\n              className={`tasklist__task`}\n            >\n              <span className=\"tasklist__task--title\">{task.title}</span>\n            </NavLink>\n          );\n        })}\n      </section>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import HomePage from \"./HomePage\";\nexport default HomePage;\n","import CheckDuplicates from \"./CheckDuplicates\";\nexport default CheckDuplicates;\n","import React, { Component } from \"react\";\nimport \"./CheckDuplicates.css\";\n\nclass CheckDuplicates extends Component {\n  state = {\n    input: \"\",\n    duplicateEnteries: [],\n    enteries: [],\n    error: \"\"\n  };\n\n  changeInput = event => {\n    let value = event.target.value;\n    this.setState({\n      input: value\n    });\n  };\n\n  addEntry = () => {\n    let inputString = this.state.input.trim();\n    let inputValues = inputString.split(\",\");\n\n    let isInvalidInputFound = false;\n    let newEntries = [];\n\n    for (let input of inputValues) {\n      let trimmedInput = input.trim();\n      if (this.validateInput(trimmedInput)) {\n        let hasRange = trimmedInput.includes(\"-\") ? true : false;\n        if (hasRange) {\n          let [lowerLimit, upperLimit] = trimmedInput.split(\"-\");\n          lowerLimit = parseInt(lowerLimit);\n          upperLimit = parseInt(upperLimit);\n          for (let start = lowerLimit; start <= upperLimit; start++) {\n            newEntries.push(start);\n          }\n        } else {\n          newEntries.push(parseInt(trimmedInput));\n        }\n      } else {\n        isInvalidInputFound = true;\n        break;\n      }\n    }\n\n    if (!isInvalidInputFound) {\n      this.processEntry(newEntries);\n    }\n\n    this.setState({\n      input: \"\"\n    });\n  };\n\n  processEntry = newEntries => {\n    let { enteries, duplicateEnteries } = this.state;\n    for (let entry of newEntries) {\n      if (!enteries.includes(entry)) {\n        enteries = [...enteries, entry];\n      } else {\n        if (!duplicateEnteries.includes(entry)) {\n          duplicateEnteries = [...duplicateEnteries, entry];\n        }\n      }\n    }\n    enteries.sort((a, b) => (a < b ? -1 : 1));\n    duplicateEnteries.sort((a, b) => (a < b ? -1 : 1));\n\n    this.setState({\n      enteries,\n      duplicateEnteries\n    });\n  };\n\n  validateInput = input => {\n    let isInputValid = true;\n    let error = \"\";\n\n    if (input.includes(\"-\")) {\n      const rangeInputs = input.split(\"-\");\n      if (rangeInputs.length !== 2) {\n        error =\n          \"Please enter valid range. it should be in the format number1-number2.\";\n      } else if (isNaN(rangeInputs[0]) || isNaN(rangeInputs[1])) {\n        error = \"Please enter number as input.\";\n      } else if (parseInt(rangeInputs[0]) > parseInt(rangeInputs[1])) {\n        error = \"Please add valid range.\";\n      }\n    } else if (isNaN(input)) {\n      error = \"Please enter number as input.\";\n    }\n\n    if (error) {\n      isInputValid = false;\n    }\n    this.setState({\n      error\n    });\n    return isInputValid;\n  };\n\n  render() {\n    const { input, duplicateEnteries, enteries, error } = this.state;\n    return (\n      <div className=\"centerd-container\">\n        <h1 className=\"heading\">Check Duplicates</h1>\n        <div className=\"input-section\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Enter a Number\"\n            value={input}\n            onChange={this.changeInput}\n            onKeyPress={event => {\n              let key = event.keyCode || event.which;\n              if (key === 13) {\n                this.addEntry();\n              }\n            }}\n          />\n          <button className=\"button\" onClick={this.addEntry}>\n            Add\n          </button>\n        </div>\n        {error ? (\n          <div className=\"error\">\n            <span className=\"error--text\">{error}</span>\n          </div>\n        ) : null}\n        <ul className=\"notes-list\">\n          Note:\n          <li>You can add single entry.</li>\n          <li>\n            You can enter comma seperated multiple enteries (for example\n            10,20,30).\n          </li>\n          <li>You can enter a range of numbers too (for example 10-25).</li>\n        </ul>\n        <div className=\"results\">\n          <div className=\"results__section\">\n            <h3 className=\"results__section--heading\">Final Enteries: </h3>\n            {enteries.length ? enteries.join(\", \") : \"No Entry Added.\"}\n          </div>\n          <div className=\"results__section\">\n            <h3 className=\"results__section--heading\">Duplicate Enteries: </h3>\n            {duplicateEnteries.length\n              ? duplicateEnteries.join(\", \")\n              : \"No Duplicate Entry.\"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CheckDuplicates;\n","import EventCard from \"./EventCard\";\nexport default EventCard;\n","import React from \"react\";\nimport { PlayCircle } from \"react-feather\";\nimport \"./EventCard.css\";\n\nconst EventCard = props => {\n  return (\n    <div\n      onClick={props.onClick}\n      className={\"event-card \" + (props.isSelected ? \"selected\" : \"\")}\n    >\n      <div className=\"poster-container\">\n        <div className=\"event-card--date\">{props.date.split(\",\")[0]}</div>\n        <div className=\"event-card--playicon\">\n          <PlayCircle className=\"icon playicon\" size={50} />\n        </div>\n        <img\n          className=\"event-card--poster\"\n          src={props.posterURL}\n          alt={props.title}\n        />\n      </div>\n      <div className=\"event-card--title\">{props.title}</div>\n    </div>\n  );\n};\n\nexport default EventCard;\n","import EventTrailerRow from \"./EventTrailerRow\";\nexport default EventTrailerRow;\n","import React from \"react\";\nimport \"./EventTrailerRow.css\";\nimport { ThumbsDown, ThumbsUp, HelpCircle, Calendar, X } from \"react-feather\";\n\nconst EventTrailerRow = props => {\n  return (\n    <div className=\"event-trailer\">\n      <div className=\"event-trailer__iframe\">\n        <div className=\"iframe-container\">\n          <iframe\n            title=\"trailer\"\n            width=\"560\"\n            height=\"315\"\n            src={props.trailerURL}\n            frameBorder=\"0\"\n            allow=\"accelerometer; Hautoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n        </div>\n      </div>\n      <div className=\"event-trailer-rightbox\">\n        <div className=\"event-trailer__info\">\n          <div className=\"title-and-closeicon\">\n            <div className=\"event-trailer__info--title\">{props.title}</div>\n            <button className=\"icon close-button\" onClick={props.hideTrailer}>\n              <X className=\"close-icon\" size={35} />\n            </button>\n          </div>\n          <div className=\"event-trailer__info--lang\">\n            {props.eventLanguage} | {props.dimension}\n          </div>\n          <div className=\"rating-date-conatiner\">\n            <div className=\"event-trailer__info--votes\">\n              <ThumbsUp className=\"icon thumbsup-icon\" size={40} />\n              100%\n            </div>\n            <div className=\"event-trailer__info--date\">\n              <Calendar className=\"icon calendar-icon\" size={40} />\n              {props.date}\n            </div>\n          </div>\n        </div>\n        <div className=\"event-trailer__actions\">\n          <div className=\"event-trailer__actions--icon thumbsup\">\n            <ThumbsUp className=\"icon thumbsup-icon\" size={40} />\n            <div>WILL WATCH</div>\n          </div>\n          <div className=\"event-trailer__actions--icon helpcircle\">\n            <HelpCircle className=\"icon help-icon\" size={40} />\n            <div>MAYBE</div>\n          </div>\n          <div className=\"event-trailer__actions--icon thumbsdown\">\n            <ThumbsDown className=\"icon thumbsdown-icon\" size={40} />\n            <div>WON'T WATCH</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventTrailerRow;\n","import TrailersContainer from \"./TrailersContainer\";\nexport default TrailersContainer;\n","import React, { Component } from \"react\";\nimport { Video, Loader, AlertTriangle } from \"react-feather\";\nimport EventCard from \"../EventCard\";\nimport EventTrailerRow from \"../EventTrailerRow\";\nimport \"./TrailersContainer.css\";\n\nclass TrailersContainer extends Component {\n  state = {\n    eventsData: [],\n    isLoading: false,\n    error: \"\",\n    isTrailerRowShowing: false,\n    eventsList: []\n  };\n\n  componentDidMount() {\n    let API_URL =\n      \"https://in.bookmyshow.com/serv/getData?cmd=GETTRAILERS&mtype=cs\";\n    this.setState({ isLoading: true });\n    fetch(API_URL, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.text())\n      .then(data =>\n        this.setState(\n          { eventsData: JSON.parse(data), isLoading: false },\n          () => {\n            this.renderEventsList(this.state.eventsData[1]);\n          }\n        )\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  getNumberOfColumns = () => {\n    let screenWidth = window.innerWidth;\n    let margin = 60;\n    let eventCardWidth = 260;\n    let numberOfColumns = Math.floor((screenWidth - margin) / eventCardWidth);\n    return numberOfColumns;\n  };\n\n  renderEventsList = (eventsData, indexOfClickedEvent = null) => {\n    const eventsList = [];\n    let insertTrailerBeforeIndex = null;\n    let idOfClickedEvent = null;\n    if (indexOfClickedEvent) {\n      let numberOfColumns = this.getNumberOfColumns();\n      let rowNumberOfClickedEvent =\n        Math.ceil(indexOfClickedEvent / numberOfColumns) - 1;\n      insertTrailerBeforeIndex = rowNumberOfClickedEvent * numberOfColumns;\n    }\n    Object.keys(eventsData).forEach((movieId, index) => {\n      const { EventTitle, ShowDate } = eventsData[movieId];\n      if (\n        insertTrailerBeforeIndex !== null &&\n        index === insertTrailerBeforeIndex &&\n        this.state.isTrailerRowShowing\n      ) {\n        idOfClickedEvent = Object.keys(eventsData)[indexOfClickedEvent - 1];\n        const {\n          EventTitle,\n          ShowDate,\n          TrailerURL,\n          EventLanguage,\n          EventDimension\n        } = eventsData[idOfClickedEvent];\n        let videoId = TrailerURL.split(\"=\")[1].split(\"&\")[0];\n        eventsList.push(\n          <EventTrailerRow\n            title={EventTitle}\n            date={ShowDate}\n            eventLanguage={EventLanguage}\n            dimension={EventDimension}\n            trailerURL={`https://www.youtube.com/embed/${videoId}`}\n            hideTrailer={this.hideTrailer}\n          />\n        );\n      }\n      eventsList.push(\n        <EventCard\n          isSelected={idOfClickedEvent === movieId}\n          key={movieId}\n          title={EventTitle}\n          date={ShowDate}\n          posterURL={`https://in.bmscdn.com/events/moviecard/${movieId}.jpg`}\n          onClick={() => this.showTrailer(index + 1)}\n        />\n      );\n    });\n    this.setState({ eventsList });\n  };\n\n  showTrailer = indexOfClickedEvent => {\n    this.setState(\n      {\n        isTrailerRowShowing: true\n      },\n      () => {\n        this.renderEventsList(this.state.eventsData[1], indexOfClickedEvent);\n      }\n    );\n  };\n\n  hideTrailer = () => {\n    this.setState(\n      {\n        isTrailerRowShowing: false\n      },\n      () => {\n        this.renderEventsList(this.state.eventsData[1]);\n      }\n    );\n  };\n\n  render() {\n    const { isLoading, eventsData, eventsList, error } = this.state;\n    if (error) {\n      return (\n        <p className=\"message-box\">\n          <AlertTriangle size={20} className=\"icon\" />\n          Sorry, Something Went Wrong. Try Again.\n        </p>\n      );\n    }\n    return (\n      <div className=\"trailers-page\">\n        <div className=\"header\">\n          <Video className=\"header__logo\" size={45} />\n          <h1 className=\"header__title\">Events Trailers Page</h1>\n        </div>\n        {isLoading ? (\n          <p className=\"message-box\">\n            <Loader size={20} className=\"icon\" />\n            Loading...\n          </p>\n        ) : null}\n        {eventsData[1] ? (\n          Object.keys(eventsData[1]).length === 0 ? (\n            <p>No data</p>\n          ) : (\n            <div className=\"events-list\">{eventsList}</div>\n          )\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default TrailersContainer;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"../components/HomePage\";\nimport CheckDuplicates from \"../components/CheckDuplicates\";\nimport TrailersContainer from \"../components/TrailersContainer\";\n\nconst AppRouter = () => {\n  return (\n    <BrowserRouter basename=\"/BMS-Test\">\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/assignment1\" component={CheckDuplicates} />\n        <Route exact path=\"/assignment2\" component={TrailersContainer} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport AppRouter from \"./routers/AppRouter\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}